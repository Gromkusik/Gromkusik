import java.util.Random;

//TIP To <b>Run</b> code, press <shortcut actionId="Run"/> or
// click the <icon src="AllIcons.Actions.Execute"/> icon in the gutter.
public class FirstApp {
    public static void main(String[] args) {
        //вывод всех методов
        /*
        System.out.println("\n№1 ************************************************************");
        printThreeWords ();
        System.out.println("\n№2 ************************************************************");
        checkSumSign ();
        System.out.println("\n№3 ************************************************************");
        printColor();
        System.out.println("\n№4 ************************************************************");
        compareNumbers ();
        System.out.println("\n№5 ************************************************************");
        System.out.println(checkSumOfTwo(5, 21));
        System.out.println("\n№6 ************************************************************");
        posOrNeg(0);
        System.out.println("\n№7 ************************************************************");
        System.out.println(trueIfNeg(24757));
        System.out.println("\n№8 ************************************************************");
        printAsManyTimesAsNumber("ILoveJava", 4);
        System.out.println("\n№9 ************************************************************");
        System.out.println(leapYear(1500));
        System.out.println("\n№10 ************************************************************");
        changeOneForZero ();
        System.out.println("\n\n№11 ************************************************************");
        fillArray ();
        System.out.println("\n\n№12 ************************************************************");
        multifyIfLessThanSix ();
        System.out.println("\n\n№13 ************************************************************");
        squareArray ();
        System.out.println("\n№14 ************************************************************");
        for (int o:initArray(4, 1111)) {
            System.out.print(o+" ");
        }
        System.out.println();

         */
    }

    //===============================================================================================================
    // 1. Создайте метод printThreeWords(), который при вызове
    // должен отпечатать в столбец три слова: Orange, Banana, Apple.
    public static void printThreeWords() {
        String[] trees={"Orange", "Banana", "Apple"};
        for (String tree:trees) {
        System.out.println(tree);
        }
    }

    //===============================================================================================================
    // 2. Создайте метод checkSumSign(), в теле которого объявите две int переменные a и b,
    // и инициализируйте их любыми значениями, которыми захотите.
    // Далее метод должен просуммировать эти переменные, и если их сумма больше или равна 0,
    // то вывести в консоль сообщение “Сумма положительная”, в противном случае - “Сумма отрицательная”;
    public static void checkSumSign() {
        Random random = new Random();
        int a = random.nextInt(100);
        int b = -(random.nextInt(100));
        //System.out.println(a);
        //System.out.println(b);
        if (a + b >= 0) {
            System.out.println("Сумма положительная");
        }
        else {
            System.out.println("Сумма отрицательная");
        }
    }

    //===============================================================================================================
    // 3. Создайте метод printColor() в теле которого задайте int переменную value и
    // инициализируйте ее любым значением. Если value меньше 0 (0 включительно),
    // то в консоль метод должен вывести сообщение “Красный”, если лежит в пределах
    // от 0 (0 исключительно) до 100 (100 включительно), то “Желтый”,
    // если больше 100 (100 исключительно) - “Зеленый”;
    public static void printColor() {
        Random random = new Random();
        int value = random.nextInt(300)-100;
        //int number = random.nextInt(max - min) + min; - чтобы рандом включал отрицательные числа.
        System.out.println(value);
        if (value<=0) {
            System.out.println("Красный");
        } else if (0<value & value<=100) {
            System.out.println("Желтый");
        } else {
            System.out.println("Зеленый");
        }

    }

    //===============================================================================================================
    // 4. Создайте метод compareNumbers(), в теле которого объявите две int переменные a и b,
    // и инициализируйте их любыми значениями, которыми захотите. Если a больше или равно b,
    // то необходимо вывести в консоль сообщение “a >= b”, в противном случае “a < b”;
    public static void compareNumbers() {
        Random random = new Random();
        int a = random.nextInt(100);
        int b = random.nextInt(100);
        //System.out.println(a); //вывод сгенерированных чисел для контроля
        //System.out.println(b);
        if (a >= b) {
            System.out.println("a >= b");
        }
        else {
            System.out.println("a < b");
        }

    }

    //===============================================================================================================
    // 5. Напишите метод, принимающий на вход два целых числа и проверяющий,
    // что их сумма лежит в пределах от 10 до 20 (включительно),
    // если да – вернуть true, в противном случае – false.
    public static boolean checkSumOfTwo(int a, int b) {
        return a + b >= 10 & a + b <= 20;
    }

    //===============================================================================================================
    // 6. Напишите метод, которому в качестве параметра передается целое число,
    // метод должен напечатать в консоль, положительное ли число передали или отрицательное.
    // Замечание: ноль считаем положительным числом.
    public static void posOrNeg(int posOrNegNumber) {
        if (posOrNegNumber>=0)
            System.out.println("Вы ввели положительное число");
        else
            System.out.println("Вы ввели отрицательное число");
    }

    //===============================================================================================================
    // 7. Напишите метод, которому в качестве параметра передается целое число.
    // Метод должен вернуть true, если число отрицательное, и вернуть false если положительное.
    //Замечание: ноль считаем положительным числом.
    public static boolean trueIfNeg(int a) {
        if (a>=0) {
            return false;
        } else {
            return true;
        }
    }

    //===============================================================================================================
    // 8. Напишите метод, которому в качестве аргументов передается строка и число,
    // метод должен отпечатать в консоль указанную строку, указанное количество раз;
    public static void printAsManyTimesAsNumber(String a, int b) {
        for (int i=1; i<=b; i++) {
            System.out.println(a);
        }

    }

    //===============================================================================================================
    // 9. Напишите метод, который определяет, является ли год високосным,
    // и возвращает boolean (високосный - true, не високосный - false).
    // Каждый 4-й год является високосным, кроме каждого 100-го, при этом каждый 400-й – високосный.
    public static boolean leapYear(int year) {
        if ((year % 4 == 0 & year % 100 != 0) || year % 400 == 0) return true;
        else return false;
    }

    //===============================================================================================================
    // 10. Задать целочисленный массив, состоящий из элементов 0 и 1. Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].
    // С помощью цикла и условия заменить 0 на 1, 1 на 0;
    public static void changeOneForZero() {
        int[] arrayOneZero = new int[10];
        Random random = new Random();

        //заполняем массив рандомно 1 и 0
        for (int i=0; i< arrayOneZero.length; i++) {
            arrayOneZero[i] = random.nextInt(2);
        }
        //вывод сгенерированного массива для контроля

        for (int a : arrayOneZero)
            System.out.print(a+" ");
            System.out.println();

        //замена 0 на 1 и наоборот
        for (int i=0; i< arrayOneZero.length; i++)
        {
            if (arrayOneZero[i] == 0)
                arrayOneZero[i]=1;
            else
                arrayOneZero[i]=0;
        }
        //вывод измененного массива для контроля

        for (int b : arrayOneZero)
            System.out.print(b + " ");

    }

    //===============================================================================================================
    // 11. Задать пустой целочисленный массив длиной 100.
    // С помощью цикла заполнить его значениями 1 2 3 4 5 6 7 8 ... 100;
    public static void fillArray() {
        int[] arrayToFill = new int[100];
        //заполняем массив
        for (int i=0; i< arrayToFill.length; i++) {
            arrayToFill[i] = i+1;
        }
        //вывод измененного массива для контроля
        for (int a : arrayToFill)
            System.out.print(a + " ");
    }

    //===============================================================================================================
    // 12. Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ] пройти по нему циклом,
    // и числа меньшие 6 умножить на 2;
    public static void multifyIfLessThanSix() {
        int[] arrayToMultify = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};

        for (int i=0; i< arrayToMultify.length; i++)
            if (arrayToMultify[i]<6) arrayToMultify[i]*=2;

        //вывод измененного массива для контроля
        for (int i=0; i< arrayToMultify.length; i++)
            System.out.print(arrayToMultify[i]+" ");
    }

    //===============================================================================================================
    // 13. Создать квадратный двумерный целочисленный массив (количество строк и столбцов одинаковое),
    // и с помощью цикла(-ов) заполнить его диагональные элементы единицами
    // (можно только одну из диагоналей, если обе сложно). Определить элементы одной из диагоналей можно по
    // следующему принципу: индексы таких элементов равны, то есть [0][0], [1][1], [2][2], ..., [n][n];
    public static void squareArray() {
        Random random = new Random();
        int n = random.nextInt(7)+3; // n - длина массива, задается рандомно от 3 до 10
        //System.out.println(n); // вывод длины массива для контроля
        int[][] squareArray = new int[n][n];
        for (int i=0; i<n; i++) {
            squareArray[i][i]=squareArray[n-i-1][i]=1;
        }

        //вывод массива
        for (int i=0; i<n; i++) {
            for (int y=0; y<n; y++) {
                System.out.print(squareArray[i][y]+" ");
            }
            System.out.println();
        }
    }

    //===============================================================================================================
    // 14. Написать метод, принимающий на вход два аргумента: len и initialValue,
    // и возвращающий одномерный массив типа int длиной len, каждая ячейка которого равна initialValue.
    public static int[] initArray(int len, int initialValue) {
        int[] initArray = new int[len];             //объявляем массив с полученной длиной
        for (int i=0; i<len; i++) {
            initArray[i]= initialValue;             //приравниваем каждую ячейку к полученному значению
        }
        return initArray;
    }
}